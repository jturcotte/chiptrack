import { Button, CheckBox, SpinBox, Slider, GroupBox, LineEdit, StandardListView, ComboBox } from "sixtyfps_widgets.60";

struct BarData := {
}
struct StepData := {
    empty: bool,
}

PianoKey :=  Rectangle {
    property<bool> is_black: false;
    signal clicked();
    color: {
        if (is_black) {
            black;
        } else {
            white;
        }
    };
    border_color: black;
    border_width: 1px;
    area := TouchArea {
        width: parent.width;
        height: parent.height;
        clicked => {
            root.clicked();
        }
    }
}
InstrumentButton := Rectangle {
    signal clicked();
    property<int> instrument_number: 0;
    width: 50px;
    height: 50px;
    border_color: black;
    border_width: 1px;
    Text {
        text: instrument_number;
        width: 100%;
        height: 100%;
        horizontal_alignment: align_center;
        vertical_alignment: align_center;
    }
    TouchArea {
        width: 100%;
        height: 100%;
        clicked => { root.clicked(); }
    }
}
SequencerStep := Rectangle {
    property<bool> highlighted;
    property<bool> empty;
    border_color: empty ? #a0a0a0 : black;
    border_width: 1px;
    color: highlighted ? grey : white;

}

MainWindow := Window {
    property<[BarData]> sequencer_bars;
    property<[StepData]> sequencer_steps;
    property<int> current_sequencer_bar;
    property<int> current_sequencer_step;
    signal note_pressed(int);
    signal selected_instrument_changed(int);

    VerticalLayout {
        HorizontalLayout {
            height: 50%;
            Rectangle {} // Spacer
            GridLayout {
                Row {
                    InstrumentButton {
                        instrument_number: 0;
                        clicked => { root.selected_instrument_changed(instrument_number); }
                    }
                    InstrumentButton {
                        instrument_number: 1;
                        clicked => { root.selected_instrument_changed(instrument_number); }
                    }
                    InstrumentButton {
                        instrument_number: 2;
                        clicked => { root.selected_instrument_changed(instrument_number); }
                    }
                }
                Row {
                    InstrumentButton {
                        instrument_number: 3;
                        clicked => { root.selected_instrument_changed(instrument_number); }
                    }
                    InstrumentButton {
                        instrument_number: 4;
                        clicked => { root.selected_instrument_changed(instrument_number); }
                    }
                    InstrumentButton {
                        instrument_number: 5;
                        clicked => { root.selected_instrument_changed(instrument_number); }
                    }
                }
                Row {
                    InstrumentButton {
                        instrument_number: 6;
                        clicked => { root.selected_instrument_changed(instrument_number); }
                    }
                    InstrumentButton {
                        instrument_number: 7;
                        clicked => { root.selected_instrument_changed(instrument_number); }
                    }
                    InstrumentButton {
                        instrument_number: 8;
                        clicked => { root.selected_instrument_changed(instrument_number); }
                    }
                }
            }
            Rectangle {} // Spacer
            VerticalLayout {
                for __[idx] in sequencer_bars:
                    SequencerStep {
                        highlighted: current_sequencer_bar == idx;
                    }
            }
            VerticalLayout {
                for step[idx] in sequencer_steps:
                    SequencerStep {
                        highlighted: current_sequencer_step == idx;
                        empty: step.empty;
                    }
            }
            Rectangle {} // Spacer
        }
        HorizontalLayout {
            spacing: -1px;
            PianoKey {
                clicked => { root.note_pressed(60); }
            }
            PianoKey {
                PianoKey {
                    x: width * -50%;
                    width: 60%;
                    height: 60%;
                    is_black: true;
                    clicked => { root.note_pressed(61); }
                }

                clicked => { root.note_pressed(62); }
            }
            PianoKey {
                PianoKey {
                    x: width * -50%;
                    width: 60%;
                    height: 60%;
                    is_black: true;
                    clicked => { root.note_pressed(63); }
                }

                clicked => { root.note_pressed(64); }
            }
            PianoKey {
                clicked => { root.note_pressed(65); }
            }
            PianoKey {
                PianoKey {
                    x: width * -50%;
                    width: 60%;
                    height: 60%;
                    is_black: true;
                    clicked => { root.note_pressed(66); }
                }

                clicked => { root.note_pressed(67); }
            }
            PianoKey {
                PianoKey {
                    x: width * -50%;
                    width: 60%;
                    height: 60%;
                    is_black: true;
                    clicked => { root.note_pressed(68); }
                }

                clicked => { root.note_pressed(69); }
            }
            PianoKey {
                PianoKey {
                    x: width * -50%;
                    width: 60%;
                    height: 60%;
                    is_black: true;
                    clicked => { root.note_pressed(70); }
                }

                clicked => { root.note_pressed(71); }
            }
            PianoKey {
                clicked => { root.note_pressed(72); }
            }
        }
    }
}
